#queries from CourseDao.class
course.add = INSERT INTO courses(course_name) VALUES (?)
course.getById = SELECT course_id, course_name FROM courses WHERE course_id = ?
course.getAll = SELECT course_id, course_name FROM courses
course.update = UPDATE courses SET course_name = ? WHERE course_id = ?
course.delete = DELETE FROM courses WHERE course_id = ?
#queries from RoomDao.class
room.add = INSERT INTO rooms(building, room_number) VALUES (?, ?)
room.getById = SELECT room_id, building, room_number FROM rooms WHERE room_id = ?
room.getAll = SELECT room_id, building, room_number FROM rooms
room.update = UPDATE rooms SET building = ?, room_number = ? WHERE room_id = ?
room.delete = DELETE FROM rooms WHERE room_id = ?
room.getFreeRoomsOnLessonTime = SELECT r.room_id, r.building, r.room_number \
                                FROM rooms r \
                                WHERE r.room_id NOT IN \
                                    ( \
                                        SELECT r2.room_id \
                                        FROM rooms r2 \
                                            LEFT JOIN lessons l ON r2.room_id = l.room_id \
                                        WHERE (l.time_start BETWEEN ? AND ?) \
                                           OR (l.time_end BETWEEN ? AND ?) \
                                    ) \
                                ORDER BY r.building, r.room_number
#queries from FacultyDao.class
faculty.add = INSERT INTO faculties(faculty_name) VALUES (?)
faculty.getById = SELECT faculty_id, faculty_name FROM faculties WHERE faculty_id = ?
faculty.getAll = SELECT faculty_id, faculty_name FROM faculties
faculty.getAllSortedByNameAsc = SELECT faculty_id, faculty_name FROM faculties ORDER BY faculty_name
faculty.update = UPDATE faculties SET faculty_name = ? WHERE faculty_id = ?
faculty.delete = DELETE FROM faculties WHERE faculty_id = ?
#queries from GroupDao.class
group.add = INSERT INTO groups(group_name, group_active, faculty_id) VALUES (?, ?, ?)
group.getById = SELECT g.group_id, g.group_name, g.group_active, g.faculty_id, f.faculty_name \
              FROM groups g \
              INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
              WHERE g.group_id = ?
group.getAll = SELECT g.group_id, g.group_name, g.group_active, g.faculty_id, f.faculty_name \
                FROM groups g \
                INNER JOIN faculties f ON g.faculty_id = f.faculty_id
group.getAllActive = SELECT g.group_id, \
                            g.group_name, \
                            g.group_active, \
                            g.faculty_id, \
                            f.faculty_name \
                     FROM groups g \
                            INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
                     WHERE g.group_active = TRUE \
                     ORDER BY g.group_name
group.getAllByFaculty = SELECT g.group_id, g.group_name, g.group_active, g.faculty_id, f.faculty_name \
                        FROM groups g \
                        INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
                        WHERE g.faculty_id = ?
group.update = UPDATE groups SET group_name = ?, group_active = ?, faculty_id = ? WHERE group_id = ?
group.delete = DELETE FROM groups WHERE group_id = ?
group.getFreeGroupsOnLessonTime = SELECT g.group_id, \
                                        g.group_name, \
                                        g.group_active, \
                                        f.faculty_id, \
                                        f.faculty_name \
                                  FROM groups g \
                                      LEFT JOIN faculties f ON f.faculty_id = g.faculty_id \
                                  WHERE g.group_active = TRUE \
                                    AND g.group_id NOT IN \
                                      (\
                                          SELECT g2.group_id \
                                          FROM groups g2 \
                                              LEFT JOIN students s ON g2.group_id = s.group_id \
                                              LEFT JOIN students_lessons sl ON s.student_id = sl.student_id \
                                              LEFT JOIN lessons l ON l.lesson_id = sl.lesson_id \
                                          WHERE s.student_active = TRUE \
                                            AND ((l.time_start BETWEEN ? AND ?) \
                                             OR (l.time_end BETWEEN ? AND ?)) \
                                      ) \
                                  ORDER BY g.group_name
group.getFreeGroupsByFacultyOnLessonTime = SELECT g.group_id, \
                                                  g.group_name, \
                                                  g.group_active, \
                                                  f.faculty_id, \
                                                  f.faculty_name \
                                            FROM groups g \
                                                LEFT JOIN faculties f ON f.faculty_id = g.faculty_id \
                                            WHERE g.group_active = TRUE \
                                              AND f.faculty_id = ? \
                                              AND g.group_id NOT IN \
                                                (\
                                                    SELECT g2.group_id \
                                                    FROM groups g2 \
                                                        LEFT JOIN students s ON g2.group_id = s.group_id \
                                                        LEFT JOIN students_lessons sl ON s.student_id = sl.student_id \
                                                        LEFT JOIN lessons l ON l.lesson_id = sl.lesson_id \
                                                    WHERE s.student_active = TRUE \
                                                      AND ((l.time_start BETWEEN ? AND ?) \
                                                       OR (l.time_end BETWEEN ? AND ?)) \
                                                ) \
                                            ORDER BY g.group_name
#queries from StudentDao.class
student.add = INSERT INTO students(student_first_name, student_last_name, student_patronymic, student_active, group_id) VALUES (?, ?, ?, ?, ?)
student.getById = SELECT s.student_id, s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, \
                s.group_id, g.group_name, g.group_active, g.faculty_id, \
                f.faculty_name \
                FROM students s \
                INNER JOIN groups g ON s.group_id = g.group_id \
                INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
                WHERE s.student_id = ?
student.getAll = SELECT s.student_id, s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
                 g.group_name, g.group_active, g.faculty_id, \
                 f.faculty_name \
                 FROM students s \
                 INNER JOIN groups g ON s.group_id = g.group_id \
                 INNER JOIN faculties f ON g.faculty_id = f.faculty_id
student.getAllActive = SELECT s.student_id, \
                              s.student_first_name, \
                              s.student_last_name, \
                              s.student_patronymic, \
                              s.student_active, \
                              s.group_id, \
                              g.group_name, \
                              g.group_active, \
                              g.faculty_id, \
                              f.faculty_name \
                       FROM students s \
                                INNER JOIN groups g ON s.group_id = g.group_id \
                                INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
                       WHERE s.student_active = TRUE \
                       ORDER BY s.student_last_name, s.student_first_name
student.update = UPDATE students SET student_first_name = ?, student_last_name = ?, student_patronymic = ?, student_active = ?, group_id = ? WHERE student_id = ?
student.delete = DELETE FROM students WHERE student_id = ?
student.getStudentsByLesson = SELECT sl.student_id, s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, \
                                    g.group_id, g.group_name, g.group_active, \
                                    f.faculty_id, f.faculty_name \
	                        FROM students_lessons sl \
	                        INNER JOIN students s ON sl.student_id = s.student_id \
	                        INNER JOIN groups g ON s.group_id = g.group_id \
	                        INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
	                        WHERE sl.lesson_id = ?
student.getStudentsByGroup = SELECT s.student_id, s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
	                       g.group_name, g.group_active, g.faculty_id, \
	                       f.faculty_name \
	                       FROM students s \
	                       INNER JOIN groups g ON s.group_id = g.group_id \
	                       INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
	                       WHERE g.group_id = ?
student.getStudentsByFaculty = SELECT s.student_id, s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
	                         g.group_name, g.group_active, g.faculty_id, \
	                         f.faculty_name \
	                         FROM students s \
	                         INNER JOIN groups g ON s.group_id = g.group_id \
	                         INNER JOIN faculties f ON g.faculty_id = f.faculty_id \
	                         WHERE f.faculty_id = ?
#queries from DepartmentDao.class
department.add = INSERT INTO departments(department_name, faculty_id) VALUES (?, ?)
department.getById = SELECT d.department_id, d.department_name, d.faculty_id, \
                   f.faculty_name \
                   FROM departments d \
                   INNER JOIN faculties f ON d.faculty_id = f.faculty_id \
                   WHERE d.department_id = ?
department.getAll = SELECT d.department_id, d.department_name, d.faculty_id, \
                  f.faculty_name \
                  FROM departments d \
                  INNER JOIN faculties f ON d.faculty_id = f.faculty_id
department.getAllByFacultyId = SELECT d.department_id, d.department_name, d.faculty_id, \
                             f.faculty_name \
                             FROM departments d \
                             INNER JOIN faculties f ON d.faculty_id = f.faculty_id \
                             WHERE d.faculty_id = ?
department.update = UPDATE departments SET department_name = ?, faculty_id = ? WHERE department_id = ?
department.delete = DELETE FROM departments WHERE department_id = ?
#queries from TeacherDao.class
teacher.add = INSERT INTO teachers(teacher_first_name, teacher_last_name, teacher_patronymic, teacher_active, department_id) VALUES (?, ?, ?, ?, ?)
teacher.getById = SELECT t.teacher_id, t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
                d.department_name, d.faculty_id, \
                f.faculty_name \
                FROM teachers t \
                INNER JOIN departments d ON t.department_id = d.department_id \
                INNER JOIN faculties f ON d.faculty_id = f.faculty_id \
                WHERE t.teacher_id = ?
teacher.getAll = SELECT t.teacher_id, t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
                d.department_name, d.faculty_id, \
                f.faculty_name \
                FROM teachers t \
                INNER JOIN departments d ON t.department_id = d.department_id \
                INNER JOIN faculties f ON d.faculty_id = f.faculty_id
teacher.update = UPDATE teachers SET teacher_first_name = ?, teacher_last_name = ?, teacher_patronymic = ?, teacher_active = ?, department_id = ? WHERE teacher_id = ?
teacher.delete = DELETE FROM teachers WHERE teacher_id = ?
teacher.getTeachersByDepartment = SELECT t.teacher_id, t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
                d.department_name, d.faculty_id, \
                f.faculty_name \
                FROM teachers t \
                INNER JOIN departments d ON t.department_id = d.department_id \
                INNER JOIN faculties f ON d.faculty_id = f.faculty_id \
                WHERE t.department_id = ?
teacher.getTeachersByFaculty = SELECT t.teacher_id, t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
                d.department_name, d.faculty_id, \
                f.faculty_name \
                FROM teachers t \
                INNER JOIN departments d ON t.department_id = d.department_id \
                INNER JOIN faculties f ON d.faculty_id = f.faculty_id \
                WHERE d.faculty_id = ?
teacher.getFreeTeachersOnLessonTime = SELECT t.teacher_id, \
                                             t.teacher_first_name, \
                                             t.teacher_last_name, \
                                             t.teacher_patronymic, \
                                             t.teacher_active, \
                                             d.department_id, \
                                             d.department_name, \
                                             f.faculty_id, \
                                             f.faculty_name \
                                      FROM teachers t \
                                        LEFT JOIN departments d ON d.department_id = t.department_id \
                                        LEFT JOIN faculties f ON f.faculty_id = d.faculty_id \
                                      WHERE t.teacher_active = TRUE \
                                        AND t.teacher_id NOT IN \
                                            ( \
                                                SELECT t2.teacher_id \
                                                FROM teachers t2 \
                                                  LEFT JOIN lessons l ON t2.teacher_id = l.teacher_id \
                                                WHERE (l.time_start BETWEEN ? AND ?) \
                                                   OR (l.time_end BETWEEN ? AND ?) \
                                            ) \
                                      ORDER BY t.teacher_last_name, t.teacher_first_name
#queries from LessonDao.class
lesson.add = INSERT INTO lessons (teacher_id, course_id, room_id, time_start, time_end) VALUES (?, ?, ?, ?, ?)
lesson.getById = SELECT l.lesson_id, l.teacher_id, l.course_id, l.room_id, l.time_start, l.time_end, \
               t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
               d.department_name, d.faculty_id AS teacher_faculty_id, \
               f.faculty_name AS teacher_faculty_name, \
               c.course_name, \
               r.building, r.room_number,\
               sl.student_id,\
               s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
               g.group_name, g.group_active, g.faculty_id, \
               f2.faculty_name \
               FROM lessons l \
               LEFT JOIN teachers t ON l.teacher_id = t.teacher_id \
               LEFT JOIN departments d ON t.department_id = d.department_id \
               LEFT JOIN faculties f ON d.faculty_id = f.faculty_id \
               LEFT JOIN courses c ON l.course_id = c.course_id \
               LEFT JOIN rooms r ON l.room_id = r.room_id \
               LEFT JOIN students_lessons sl ON l.lesson_id = sl.lesson_id \
               LEFT JOIN students s ON sl.student_id = s.student_id \
               LEFT JOIN groups g ON s.group_id = g.group_id \
               LEFT JOIN faculties f2 ON g.faculty_id = f2.faculty_id \
               WHERE l.lesson_id = ?
lesson.getAll = SELECT l.lesson_id, l.teacher_id, l.course_id, l.room_id, l.time_start, l.time_end, \
              t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
              d.department_name, d.faculty_id AS teacher_faculty_id, \
              f.faculty_name AS teacher_faculty_name, \
              c.course_name, \
              r.building, r.room_number,\
              sl.student_id,\
              s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
              g.group_name, g.group_active, g.faculty_id, \
              f2.faculty_name \
              FROM lessons l \
              LEFT JOIN teachers t ON l.teacher_id = t.teacher_id \
              LEFT JOIN departments d ON t.department_id = d.department_id \
              LEFT JOIN faculties f ON d.faculty_id = f.faculty_id \
              LEFT JOIN courses c ON l.course_id = c.course_id \
              LEFT JOIN rooms r ON l.room_id = r.room_id \
              LEFT JOIN students_lessons sl ON l.lesson_id = sl.lesson_id \
              LEFT JOIN students s ON sl.student_id = s.student_id \
              LEFT JOIN groups g ON s.group_id = g.group_id \
              LEFT JOIN faculties f2 ON g.faculty_id = f2.faculty_id
lesson.update = UPDATE lessons SET teacher_id = ?, course_id = ?, room_id = ?, time_start = ?, time_end = ? WHERE lesson_id = ?
lesson.delete = DELETE FROM lessons WHERE lesson_id = ?
lesson.addStudentToLesson = INSERT INTO students_lessons (lesson_id, student_id) VALUES (?, ?)
lesson.deleteAllStudentsFromLesson = DELETE FROM students_lessons WHERE lesson_id = ?
lesson.deleteStudentFromLesson = DELETE FROM students_lessons WHERE lesson_id = ? AND student_id = ?
lesson.getAllByTeacher = SELECT l.lesson_id, l.teacher_id, l.course_id, l.room_id, l.time_start, l.time_end, \
       t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
       d.department_name, d.faculty_id AS teacher_faculty_id, \
       f.faculty_name AS teacher_faculty_name, \
       c.course_name, \
       r.building, r.room_number,\
       sl.student_id,\
       s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
       g.group_name, g.group_active, g.faculty_id, \
       f2.faculty_name \
       FROM lessons l \
       LEFT JOIN teachers t ON l.teacher_id = t.teacher_id \
       LEFT JOIN departments d ON t.department_id = d.department_id \
       LEFT JOIN faculties f ON d.faculty_id = f.faculty_id \
       LEFT JOIN courses c ON l.course_id = c.course_id \
       LEFT JOIN rooms r ON l.room_id = r.room_id \
       LEFT JOIN students_lessons sl ON l.lesson_id = sl.lesson_id \
       LEFT JOIN students s ON sl.student_id = s.student_id \
       LEFT JOIN groups g ON s.group_id = g.group_id \
       LEFT JOIN faculties f2 ON g.faculty_id = f2.faculty_id \
       WHERE l.teacher_id = ?
lesson.getAllByRoom = SELECT l.lesson_id, l.teacher_id, l.course_id, l.room_id, l.time_start, l.time_end, \
       t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
       d.department_name, d.faculty_id AS teacher_faculty_id, \
       f.faculty_name AS teacher_faculty_name, \
       c.course_name, \
       r.building, r.room_number,\
       sl.student_id,\
       s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
       g.group_name, g.group_active, g.faculty_id, \
       f2.faculty_name \
       FROM lessons l \
       LEFT JOIN teachers t ON l.teacher_id = t.teacher_id \
       LEFT JOIN departments d ON t.department_id = d.department_id \
       LEFT JOIN faculties f ON d.faculty_id = f.faculty_id \
       LEFT JOIN courses c ON l.course_id = c.course_id \
       LEFT JOIN rooms r ON l.room_id = r.room_id \
       LEFT JOIN students_lessons sl ON l.lesson_id = sl.lesson_id \
       LEFT JOIN students s ON sl.student_id = s.student_id \
       LEFT JOIN groups g ON s.group_id = g.group_id \
       LEFT JOIN faculties f2 ON g.faculty_id = f2.faculty_id \
       WHERE l.room_id = ?
lesson.getAllByStudent = SELECT l.lesson_id, l.teacher_id, l.course_id, l.room_id, l.time_start, l.time_end, \
       t.teacher_first_name, t.teacher_last_name, t.teacher_patronymic, t.teacher_active, t.department_id, \
       d.department_name, d.faculty_id AS teacher_faculty_id, \
       f.faculty_name AS teacher_faculty_name, \
       c.course_name, \
       r.building, r.room_number,\
       sl.student_id,\
       s.student_first_name, s.student_last_name, s.student_patronymic, s.student_active, s.group_id, \
       g.group_name, g.group_active, g.faculty_id, \
       f2.faculty_name \
       FROM lessons l \
       LEFT JOIN teachers t ON l.teacher_id = t.teacher_id \
       LEFT JOIN departments d ON t.department_id = d.department_id \
       LEFT JOIN faculties f ON d.faculty_id = f.faculty_id \
       LEFT JOIN courses c ON l.course_id = c.course_id \
       LEFT JOIN rooms r ON l.room_id = r.room_id \
       LEFT JOIN students_lessons sl ON l.lesson_id = sl.lesson_id \
       LEFT JOIN students s ON sl.student_id = s.student_id \
       LEFT JOIN groups g ON s.group_id = g.group_id \
       LEFT JOIN faculties f2 ON g.faculty_id = f2.faculty_id \
       WHERE sl.student_id = ?