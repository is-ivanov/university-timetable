#queries from CourseRepository.class
course.getAll = SELECT c FROM Course c ORDER BY c.name
course.getAllSortedPaginated = SELECT c FROM Course c ORDER BY %s %s
course.deleteById = DELETE FROM Course c WHERE c.id = :id
course.countAll = SELECT count(c.id) FROM Course c

#queries from RoomRepository.class
room.getAll = SELECT r FROM Room r \
              ORDER BY r.building, r.number
room.getAllSortedPaginated = SELECT r \
                             FROM Room r \
                             ORDER BY %s %s
room.deleteById = DELETE FROM Room r \
                  WHERE r.id = :id
room.countAll = SELECT count(r.id) FROM Room r
room.getFreeRoomsOnLessonTime = SELECT r \
                                FROM Room r \
                                WHERE r.id NOT IN \
                                    ( \
                                        SELECT r2.id \
                                        FROM Room r2 \
                                            LEFT JOIN Lesson l ON r2 = l.room \
                                        WHERE l.timeEnd >= :time_start \
                                          AND l.timeStart <= :time_end \
                                    ) \
                                ORDER BY r.building, r.number

#queries from FacultyRepository.class
faculty.getAll = SELECT f FROM Faculty f
faculty.getAllSortedPaginated = SELECT f FROM Faculty f ORDER BY %s %s
faculty.getAllSortedByNameAsc = SELECT f FROM Faculty f ORDER BY f.name ASC
faculty.deleteById = DELETE FROM Faculty f WHERE f.id = :id
faculty.countAll = SELECT count(f.id) FROM Faculty f

#queries from GroupRepository.class
group.getAll = SELECT g FROM Group g \
               ORDER BY g.name
group.getAllActive = SELECT g FROM Group g \
                     WHERE g.active = TRUE \
                     ORDER BY g.name
group.getAllByFaculty = SELECT g FROM Group g \
                        WHERE g.faculty.id = :facultyId
group.deleteById = DELETE FROM Group g \
                   WHERE g.id = :id
group.getFreeGroupsOnLessonTime = SELECT DISTINCT g \
                                  FROM Group g \
                                    LEFT JOIN Student s ON s.group = g \
                                  WHERE g.active = TRUE \
                                    AND s.active = TRUE \
                                    AND s.id NOT IN \
                                  ( \
                                    SELECT s2.id \
                                    FROM Student s2 \
                                        JOIN s2.lessons l \
                                    WHERE s2.active = TRUE \
                                      AND l.timeEnd >= :time_start \
                                      AND l.timeStart <= :time_end \
                                  ) \
                                  ORDER BY g.name
group.getFreeGroupsByFacultyOnLessonTime = SELECT DISTINCT g \
                                           FROM Group g \
                                               LEFT JOIN Student s ON s.group = g \
                                           WHERE g.active = TRUE \
                                             AND g.faculty.id = :facultyId \
                                             AND s.active = TRUE \
                                             AND s.id NOT IN \
                                               (\
                                                   SELECT s2.id \
                                                   FROM Student s2 \
                                                       JOIN s2.lessons l \
                                                   WHERE s2.active = TRUE \
                                                     AND l.timeEnd >= :time_start \
                                                     AND l.timeStart <= :time_end \
                                               ) \
                                           ORDER BY g.name

#queries from StudentRepository.class
student.getAll = SELECT s \
                 FROM Student s \
                 ORDER BY s.lastName, s.firstName, s.patronymic
student.getAllActive = SELECT s \
                       FROM Student s \
                       WHERE s.active = TRUE \
                       ORDER BY s.lastName, s.firstName
student.deleteById = DELETE FROM Student s \
                     WHERE s.id = :id
student.getStudentsByLesson = SELECT s \
                              FROM Student s \
                              JOIN s.lessons l \
                              WHERE l.id = :lessonId
student.getStudentsByGroup = SELECT s \
                             FROM Student s \
                             WHERE s.group.id = :groupId
student.getStudentsByFaculty = SELECT s \
                               FROM Student s \
                               WHERE s.group.faculty.id = :facultyId
student.getFreeStudentsFromGroupOnLessonTime = SELECT s \
                                               FROM Student s \
                                               WHERE s.group.id = :groupId \
                                                 AND s.group.active = TRUE \
                                                 AND s.active = TRUE \
                                                 AND s.id NOT IN \
                                                    ( \
                                                        SELECT s2.id \
                                                        FROM Student s2 \
                                                            JOIN s2.lessons l \
                                                        WHERE l.timeEnd >= :time_start \
                                                          AND l.timeStart <= :time_end \
                                                    ) \
                                                        ORDER BY s.lastName, s.firstName

#queries from DepartmentRepository.class
department.getAll = SELECT d FROM Department d \
                    JOIN FETCH d.faculty f \
                    ORDER BY d.name
department.getAllByFacultyId = SELECT d FROM Department d \
                               JOIN FETCH d.faculty f \
                               WHERE d.faculty.id = :facultyId \
                               ORDER BY d.name
department.deleteById = DELETE FROM Department d \
                        WHERE d.id = :id

#queries from TeacherRepository.class
teacher.getAll = SELECT t \
                 FROM Teacher t \
                 JOIN FETCH t.department d \
                 ORDER BY t.lastName, t.firstName
teacher.deleteById = DELETE FROM Teacher t \
                     WHERE t.id = :id
teacher.getTeachersByDepartment = SELECT t FROM Teacher t \
                                  JOIN FETCH t.department d \
                                  WHERE d.id = :departmentId
teacher.getTeachersByFaculty = SELECT t FROM Teacher t \
                               JOIN FETCH t.department d \
                               JOIN FETCH d.faculty f \
                               WHERE f.id = :facultyId
teacher.getFreeTeachersOnLessonTime = SELECT t FROM Teacher t \
                                      WHERE t.active = TRUE \
                                        AND t.id NOT IN \
                                            ( \
                                                SELECT t2.id \
                                                FROM Teacher t2 \
                                                  LEFT JOIN Lesson l ON t2 = l.teacher \
                                                WHERE l.timeEnd >= :time_start \
                                                  AND l.timeStart <= :time_end \
                                            ) \
                                      ORDER BY t.lastName, t.firstName

#queries from LessonRepository.class
lesson.getAll = SELECT l FROM Lesson l \
                    JOIN FETCH l.course c \
                    JOIN FETCH l.teacher t \
                    JOIN FETCH l.room r
lesson.deleteById = DELETE FROM Lesson l \
                    WHERE l.id = :id
lesson.deleteAllStudentsFromLesson = DELETE FROM students_lessons \
                                     WHERE lesson_id = :id
lesson.getAllForTeacher = SELECT l \
                          FROM Lesson l \
                            JOIN FETCH l.course c \
                            JOIN FETCH l.teacher t \
                            JOIN FETCH l.room r \
                          WHERE t.id = :teacherId
lesson.getAllForRoom = SELECT l \
                       FROM Lesson l \
                            JOIN FETCH l.course c \
                            JOIN FETCH l.teacher t \
                            JOIN FETCH l.room r \
                       WHERE r.id = :roomId
lesson.getAllForStudent = SELECT l \
                          FROM Lesson l \
                            JOIN FETCH l.course c \
                            JOIN FETCH l.teacher t \
                            JOIN FETCH l.room r \
                            JOIN FETCH l.students s \
                          WHERE s.id = :studentId
lesson.getAllForStudentForTimePeriod = SELECT l \
                                       FROM Lesson l \
                                            JOIN FETCH l.course c \
                                            JOIN FETCH l.teacher t \
                                            JOIN FETCH l.room r \
                                            JOIN FETCH l.students s \
                                       WHERE s.id = :studentId \
                                         AND l.timeStart >= :timeStart \
                                         AND l.timeEnd <= :timeEnd
lesson.getAllForTeacherForTimePeriod = SELECT l \
                                       FROM Lesson l \
                                            JOIN FETCH l.course c \
                                            JOIN FETCH l.teacher t \
                                            JOIN FETCH l.room r \
                                       WHERE t.id = :teacherId \
                                         AND l.timeStart >= :timeStart \
                                         AND l.timeEnd <= :timeEnd
lesson.getAllForRoomForTimePeriod = SELECT l \
                                    FROM Lesson l \
                                        JOIN FETCH l.course c \
                                        JOIN FETCH l.teacher t \
                                        JOIN FETCH l.room r \
                                    WHERE l.room.id = :roomId \
                                      AND l.timeStart >= :timeStart \
                                      AND l.timeEnd <= :timeEnd